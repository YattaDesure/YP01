Task

5.1 Создайте новый проект Avalonia
5.1.1 Создать новый проект типа Avalonia C# Project и назвать его
HelloApp
При создании:
- выбрать платформу Desktop, Android,
- указать фреймворк CommunityToolkit
5.1.2 Изменить запускаемый проект на HelloApp.Desktop. Запустить
приложение.
5.1.3 Изменить запускаемый проект на HelloApp.Android. Запустить
приложение.
5.2 Добавление страниц
5.2.1 Добавьте в приложение новую страницу HomeView (Добавить –
Создать новый элемент – Avalonia – Avalonia User Control)
5.2.2 Измените пространство имен HomeView на HelloApp.Views
(измените .axaml и .axaml.cs файлы)
5.2.3 На странице расположите TextBlock с текстом «Hello Avalonia!»
5.2.4 В MainWindow.axaml измените запускаемую страницу на
HomeView. Запустите приложение.
5.2.5 Измените параметры TextBlock. Выровняйте его по центру экрана,
измените цвет текста на зеленый, размер шрифта – 40
5.3 Взаимодействие разметки с кодом
5.3.1 В HomeView добавьте StackPanel и переместите TextBlock в нее.
5.3.2 Добавьте в StackPanel кнопку «Изменить текст»
5.3.3 Создать в папке ViewModels новый класс HomeViewModel. Данный
класс должен быть наследником класса ViewModelBase и иметь модификатор
partial.
5.3.4 В классе определить поле с атрибутом ObservableProperty и метод с
атрибутом RelayCommand:
[ObservableProperty]
private string text;
[RelayCommand]
public void ChangeText(){
Text = "Новый текст"
}
5.3.5 Изучить описание данных атрибутов. Пересобрать проект
5.3.6 Откройте файл HomeView.axaml.cs и в конструкторе установите
значение DataContext:
public HomeView()
{
 InitializeComponent();
 DataContext = new HomeViewModel();
}
5.3.7 В разметку UserControl страницы добавьте строки
xmlns:vm="using:HelloApp.ViewModels"
x:DataType=”vm:HomeViewModel”
5.3.8 На странице привяжите значение Text элемента TextBlock к
соответствующему свойству HomeViewModel и значение Command элемента
Button к команде ChangeTextCommand.
<TextBlock Text="{Binding Text}" ... />
<Button Command="{Binding ChangeTextCommand}" ... />
5.4 Контейнеры элементов управления
5.4.1 Добавить на экран DockPanel, задать для нее размеры.
5.4.2 В панели расположить 5 Rectangle разных цветов. Поочередно для
них указать свойства:
- DockPanel.Dock=”Top” Height=”100”
- DockPanel.Dock=”Left” Width=”100”
- DockPanel.Dock=”Bottom” Height=”100”
- DockPanel.Dock=”Right” Width=”100”
Для последнего Rectangle свойство не устанавливайте.
5.4.3 Добавить на экран Grid, задать для него размеры и параметры
Grid.ColumnDefinitions=”*,2*”, Grid.RowDefinitions=”Auto,100”
5.4.4 В сетке расположить 4 Rectangle разных цветов, расположив их в
разных ячейках Grid при помощи Grid.Column и Grid.Row
5.4.5 Добавить на экран две StackPanel, для одной указать
Orientation=”Horizontal”, для другой Orientation=”Vertical”.
5.4.6 В панелях расположить по 4 TextBlock с текстом, указать им
различный размер.


#1

<DockPanel Width="400" Height="400">
    <Rectangle Fill="Red" DockPanel.Dock="Top" Height="100"/>
    <Rectangle Fill="Blue" DockPanel.Dock="Left" Width="100"/>
    <Rectangle Fill="Green" DockPanel.Dock="Bottom" Height="100"/>
    <Rectangle Fill="Yellow" DockPanel.Dock="Right" Width="100"/>
    <Rectangle Fill="Purple"/>
</DockPanel>
#2
<Grid Width="400" Height="400" 
      ColumnDefinitions="*,2*" 
      RowDefinitions="Auto,100">
    <Rectangle Fill="Red" Grid.Column="0" Grid.Row="0"/>
    <Rectangle Fill="Blue" Grid.Column="1" Grid.Row="0"/>
    <Rectangle Fill="Green" Grid.Column="0" Grid.Row="1"/>
    <Rectangle Fill="Yellow" Grid.Column="1" Grid.Row="1"/>
</Grid>
#3
<StackPanel Orientation="Horizontal">
    <TextBlock Text="Текст 1" FontSize="12"/>
    <TextBlock Text="Текст 2" FontSize="16"/>
    <TextBlock Text="Текст 3" FontSize="20"/>
    <TextBlock Text="Текст 4" FontSize="24"/>
</StackPanel>

<StackPanel Orientation="Vertical">
    <TextBlock Text="Текст A" FontSize="10"/>
    <TextBlock Text="Текст B" FontSize="14"/>
    <TextBlock Text="Текст C" FontSize="18"/>
    <TextBlock Text="Текст D" FontSize="22"/>
</StackPanel>